// Options: Export entire program; Code Block delimiter instructions;
// Unformatted Rung Comments; Element Documentation Database;
// System Configuration; Memory Configuration/Devices with Built-In Types and User Add-Ons;
// use Element names (no NickNames); rung/address annotations;
// <TAB> parameter delimiter; 
// Write/overwrite file C:\Users\Public\Documents\Do-more\Designer2_3\Projects\FMS_Deepspace_EXPORT_DMD.txt

PLC DM-SIM

// Do not modify SYS_CONFIG block!
#BEGIN SYS_CONFIG
917ced337f919a1f8c255e8ae4a71d0d3446045848cf385730de30e8b11fe9894f5a6348c9a8c85e
93c3fbef13459b3d39fa9841b459771cfdeadb4518db0c09c65a47f8fd91c552f024b35faf60336c
eb93302b0eb40dbdab18836b339b0e098c0d77ea353da05ed418eb1c6c12d00f6289a2a817dac877
6a7b196079dacf2a96f2a4498de382c7c9afcb32fbdab5b9f4184db5f34774b859d32de0b5694c1f
3765174d1ac5d8ae6ce21cc6dcd83e95eef2ff4d2c872576f3e7e9747ae916209fe6a018abb93e1d
add6aedc7256174b8d171cc8b526b2d7d2c5451f1bd4b3ba7c74b45fda8f4eb533e68b0ac1f72f59
abd835872af848ef1c70c95667e48c39ae8c54a397790fcd1e00e3a37011678d149e67303a07f8d2
a1c0181e850105aec3bea3e8ae4a7f1ee30e62d3a8defd5798b0c0e95c2b12a74948df28fef4efbb
8b5e17598c39048f45a53b7df71abb8209195778ab2a9aea0530dd0e2c232cf7ab0db381802286b5
7cbe629ff4efd58fd183a1d756037c14ce46ad389fb49398113cbca58f76f61eaee8daaa2cca2823
6ef61f164b30806755340a875b9035152cbdcd8841ff44fadf133ade84d4a4d09d203d0837815772
961e6d58ff6753bb7866641ea72cceb77927e1b0a495989e46f19bdc9bd08ee18c0e2a260f5d14b4
e6d3e6d0c57aca3b0f6e65b6ffc1526707ae34800dccd090dcb22e8d1fceca73d8ec10be749b3f1a
01d44933b9044a7569aa7d616180adb76e65bb257dd282086aa041fd09f090e1b24e8db6c5b36207
6b1e5206bdaaf15f6b3cf5976574b72f185b83505b0f2b80b8c1a401d919399270cad7b0edf75369
08b6e3185a9a4e8a033aa1076c9f6bedcdeb34960010c2bacbfdbc296cc67e46b2f7d7592e56d988
d4c4b88845d8f113096977e77d7f2fa7476c1610e82d6dec853f3a46261f56fce0105cdf3d56a454
83831df1d88f7edbaa196ceb4c2f48972b7797f5735b75f22c6a4bf62b4982fa9cbe62327f82b10e
8cbbc849787472e02bc60e9c95eb7809fcce2b014c51e88a0f674b9c2eae5b5fdf7bc9821d4649cc
20532331979f99c4ee62cd59e9f26bd52ebc1c75b578c58a07264226977aaefcac5e7f786c1b7f2e
670d9ca81a9f9dbec8a5e83d360a317028c89e15182dfa9b2db6889626ed6f584b06e95a2f5b2dd9
03f34899c265d03bca469e0b0457a8fbfaf80aca54625f9d36f987c8c65997ba712edb0a44d68337
74db172bfe814f687a26ac3796e1f14107216da53b63acd3a1448b00f0beedc8236e51a0872b17e4
40bcc95b5ce6b1686e219e44b0a665978285b4b2b448d818572abf9acfa2733b4a8212a305d7cc8c
f9a6f5f51495e48fe2a6aba02a96018d7ede7e6ab94438d91caa356206aaac098dd2e39677a8b8af
b1ef06971b4e36edffcc0be8718ef0ef4e24ca5bda9698c7834af490e3d8a933189333dfb0b2fcad
fd8ff5e7857c26433b42f7113cb8177730ad4c96c8ab5afad483ea7c2719e79a8c2f710be43fdb85
eb6740e04b50ef86d956235c6d73fab450bee7ec0a0e44ea4b844b70b1b7c23932cdf2d377730c64
66f786ff1e25f5e6e391112500ded41c98e76979798bfa527519bb3b1c75ba5c69a1b2f08a675495
5f9678b171fa9ee2bb7904a10e668e666cf103ecb22a7baaa9cff85f01c6739f92f55ca2316e60bd
51b75014a79f83a3673f6d29af08d850e6b5f6953e02b1d6eff72596dae7fb8680c37536fc9d3da5
00247af2ac23b38be3ab06b97baec6a9aa2237f2741887e5b41b5c94fa7836341332cd27ce65bd40
672c64db8b50a8f4abc54b60c7634a4c6bf3e6f17e1d833caa8aa4bf99ba99075072ce0d3f24e456
3f14703de921a6efbdfbb04d8bf04250ce1ac44d35c15991fabb6fa7a0f0ea342d5870c44f8eb4e1
ca4ada4166517d43a449fd5a352215fbddde302e1f4fd0966629ec603a5dc43374d7edabf6425b4d
bdecd62a398c5197b78e0e5da09b49da65a71f283147ba60bbd416f16e9ec23dfe79a84b22fede5f
998aec2d4bab548c8d8ffd3ca94a83d10cd9624bc9b347ef268df7aa97180c243de1c9e87631c699
3ee2af9edce725896f4c12abc662f738b741a61bebfe744396e84c6cca8cc3c810b1070c962e1555
7e35b88edba81aa80f2fe94327e36128ca89279da94f0e45483d136dd7c882f000c15fa299cb440f
807aeed21a0c76eb8c5ce77dcd42c0b6558f64d9c9393bfadf9d86de3f17eeab3eae684b9288850f
508e53dfc65ba2045e7d27a36be01369cebc3b567177b273d2d5d835181dffc50c243346ba04d14f
8e305d383809bfac0829cc4b37e374d9a3c9cb7c787f82c8c2f5bfb35ae68a4739b16b4b56641435
a1e4d566ef7a5838b78041a3e5042361fc13b16e2d41d3a11e567371134e664ed73317ee53918523
b36865fdfca4fc02adf821b51a9fa1ac1bdb25ff9beabd82389062902a9cfe7b638fd31052e83f75
7f0d1a9f2fb5d85fd7df5787b9a1414758805ccdbcd42895e80e9ae40c9d310550e8571d370f777e
8d96dd0a8046ecf9a9786629b6affcd9148330fd0ee09d67e29540bb2f66ecf03b80d9812243b072
3767b63040d200ba41c20033a5ee2d52e69ab1b32c4b51f72411513341f6a6da95fee6873ae7ac12
b95478eb99490aaf84a2d70d028edfd8c847fa6de96dcc4004fdcccf9ce68c8b91fd9d341ea8ec91
3985404cd144f30e9c6c4cd0e71b4a9675db30f1f4628425f3316697affb90817a60830a1711aa74
18ddc5146caf938fc316fa44f76b99396be46e7ba7e5b2e3b69b29f6d6a23bb35565da6a2ef4df09
bf1fc0f1041b0d3e9c45b9795ace30d37f0711cca36a7874a01cbc9ff6bfcdeaa86f41476625069d
c9b081c4b8fb54965bed4c08ce7dd5872406eca192b7b5a55ed0a5e4c9ab0d6c2e7a9b4016dd9d49
9758d6c63296b3560b6e19e050f30076ad502639861982de1999fe43bf4f39daae9b28524bb224c6
1fc8349e740dc77050e2173190c49bcdbb85c66d206bccb85d0285cacf6e0f7d4538c5c9aee31859
db7a7ae041d78a4fc7a38f9cec78eb86209cea133f2772ba8ac2f78d95efa8eb4c8210bd34bcf28e
2231aee9c5ea2b79c6f23178440ec1b4eed566574e328705befee4cc811346e0bbaec76e0842fb36
3c83365c369ca819b4c66c9b60b524ed4ed1e2dd25e07cc52bddf38fdb25c5bb03f6ab521b58c2b9
0b23e92c53b20db3934b7287688da583975d8120610b130ff8e58a962bb2aac2eb6963f9d4d0a297
464d153ce9fd896cb440cf0f3a15b4accc427193a84dd5c03305946264a32035ef19ea79fe0dc03b
78cec0cc3cf093ef0304e9c99eb072c031cf65be5e17daedbeed144474a66c90f33c8d7fb2dc3de9
91dda1fdf61fbf271a3b100db7f02f69f44ed5e6eb7ecc96b29edd51ae876f700e207637cb131210
9f5f0bed800b50b56695647729198baaf45105d69376cd6e2299818c8527fb5bcd084f47e865877b
b4dde25fefffbdc73458701f29ec334d1826b88d6a7b023500ee1385c966766032f8553b7ad44850
ccf11379256d1ae823e9fe1edc745a0e2ba88b659d4d058791d32df505270e43308e43b0fdffd460
ae107b9a0bd577661ad16abbe7ca24f3ecd6eb67d67d874efd0086c125a90182eec70afb4faf66c5
40afbf192c6e8cb27622b82368638a9baa7406eb41d4443c5c95e2cdd522808382bbc40f04c735e2
30a0ba5751f32f6ff8a7d3db7479a430991b775ed323279ccacb42aa57c66490776a28bd7ae57e3c
b8d0410064012f49664c33eb4a23ddf7d6b9a6e82d77c9f5b7556fabf862f932361fc025821eec1a
c8b5069a21d25c951334b6a8ebcc94d532c6921b4edde214e229e262181d1566015581c141c1be0e
1c9f4350e6f9c30f634a3b8b146f9cf098f761c5f0b2506bef632dcf6a7b26b9210ca25cf66f310c
723eaf9dc8574ec61309c66b0504aaec922ce192de5cc9d4e90b64ed6c4aba245271f8a2f84c01ae
90f6b19be43ca36a0dbda60648c4145a93d7bbc906ef3193827eb50ed035926e9a768cf142de7f5c
2a7ee1f870a45ef0b7e553f76b61a70b3449d9d300b6c9da1fef19dd20d038aa597bcf8cf2b7e180
7f9f2bc66ef8d1c8e34b065e99ff3a1ee760b31084644dbe3e75b9abaf9baeb89eb4c5cc0029248b
bed1add1ede41701316bde607a0778c54b5ffae3c699c1eb0f4a08c20b8d62b40d4690123fb5a4f9
70eacfee859ebeee336df0fa56f0adf9e91c230d5c15d21a0e29830213eb9fba3ac97d6bc8147365
87136be5e3c351f876f2bd57323dced0e0368477816d12b1ad3b703ed686ce8c9ae8c98ed86ec65a
685678f3d35d09e8dd9d7f424607ed3f0679b52775171da22fcd31f1c90105a0604e24573b137cca
875822774957869ce457aeebc6ad917b2c360cebc9f62e476e7be70546c9f3b37a4ba7d8f19e3a7a
c0b263895f23d102504f91885bb3942d863a17b179d8e890aa959bd646b6c5503b3c1932b703517c
986e07b4191f39c8f0905fca958a3a3f5fe61010bc4bbcb5abade6cebbdc6e96d11597b1021348c5
b8ee47754a8e13a4dc2510a42ef72d6f6a0c02e9f6be2bfb9afc18fcfe32d43a3fa3c2765aaf61a2
e58ed4f91694eb5489f5abc4c81558107185c850b55bdee9af609216461ac8380138293093492cb1
ab49bab8160750725f8f7acb076096205a2419f282b3d368f25a3a7af762a5e0c79af8c7daf124bb
873fb7fa3046d98e03e1d5b4a6cd23f26caf07f12f8e26aedcd7ef0a5807d8bd90d74e8e9ec0286c
88cbde04f1f64d012d31ae0f7a953890afd3fd938ff24d3845c85d9ad790cd8babe53802fd7b0a14
8afdee91c579281a1fd81b5d00c6e4aa772d2d8eeaafdc485ef84f864b33a521bdb784ea29429484
1c067be5caa4582d92e7b63bae69d2cac502e8fadd6d45c1b0ddd9f7cd6570509e89dc342ec9384f
97aaf900015c3cb4c648ee163e88edb330770b84dfee0dd89a9acebe0ab368a6fa128fc1e23d28ce
d0ddab73a075989def006e99b8ab0dda1cfb28276323fe6a4c8b5bdd214e683b23ba761bd16ceb61
823fcdfb288f02a75ff38e3d46a8888d2884229d613e2f2ee2337a44ab6e8e8faada1bd2d2ba0a8b
21609e0bbd27d4b19706c2429db3e77d30b4d8b35c7d63277522ebcc61af4061123c094ce09a86f3
612d2d457736137365fe566016cf1f9a6c3cd3bdfeef984d1144d41debfda17c6ef9f13faacd3d80
d2170683e75ef2ea47cad87e3aa1f9016649b7685d80a5bf91d8b65bb7ffe964d96b3aa18bf33115
c64234726f95d5e105aaeedda3c6e4734b3a34a6ace419aff1df936822290223372f65b9fdbae96f
6c370945cc0349f532b95902ca2c31ea9d5c1310225d47e89f6a65fd68aa0305dee717c1a40b2b75
84752e2f8f97d81ff270010f36b406ba0cdaedb3df63a9e1652c5db33c4cfaa1a5e3bebefdcd3b22
2e5ec40e9b14604921d3df1c88c70fc5250aaf1449fda387971fbc307d2cbf07c95e10389ad0c907
b583d53b2f198f312c8797d4838a2477c16b315eea8a688e10cc9dc24524b5b6c5fa13210743535c
bf0a5df3da9a46fd048fb8e4b8f5d80cac57ac68bdd663c8f4e360c5b2f53b436b7380679b3f6765
7fc9101a4faecef593ae558b00168842c5e4ef5bd11d71661683cb66a286a853db8feff934cb8fed
218a42a60ca9a002128706a87be59c571d9cfbbefae94a9d9e545b28f853bdb4da94fc8d43f7c85a
14a64009e126abfae43604b93242a31465955c90b32c18426a4c725578566bfa9094053d0af3418d
e1b454eb511190e441dff7f10bb400597c22632fa58ff7bf464c69f51182788c5d9cc20a835c3e28
7edd6004dc8fef8c91a889cb43100cf4bb841883965e717bc9ac6135c579ae46629a842432ec033d
1ae79f7da0db0776d0ed8194bc2c3728758c21204754fcf3c1ce2134069625cd0fc4bd711f9b8eb3
f7b7e8e78f34028e9ba84378dd2adf0f41e93ccbd3277c211895dfd667e98157e93d16dcd0fc36d3
c2798e0c490d8b5d4fe9ae63d6956356434837fccebba51f2468b08d12ef1371db10347d3032e914
3f8bb2477d161b56b408aec030676faed30a04b4b8d8c29d88163d575b7d3d78af624afc0561d5f6
32439fe9afa066607d90b3424acc9b9751f765c0c7de2bd0332c0ccb4154f48629fb832bd75e46d7
b7e2254f3d5a402404c123c00b7386bbd327cca46125d22c56f7c71f02e0554c0b4e8a3e4c67c32b
e3ef0b53837091de5dbd9ff361b3085623ac8e4211f7c171929891b8decfe44dd3a2b1e5a9282d67
a9dbfed3dbf35b3080434a44b35c4c44e6de3ec18e144fc6b0bfcc0168de041f04a9da544c385f76
7b5264f16816da320495ee64180a07b6e8deaf3a96faa5b53e7b329cd526a2a2355e303e76328992
b04b52e4a44edb4684772dc23ad4f718c3360037c805845e8bd01e192e7b5c136bd4d3b814f43171
b9256ceec182352c28d1659c3441c6a82f8a35b288ecfbf5c1f3d77d43b60619096d7bc515058e76
69fd67aff304b8dde5f803b3beb950c7226ddbe1ec2015fc05c1dff8e7db3b2df82e4e489fb80e59
34c76b11b9123f095cc380b65bfe13f0fa861d6bb41a53fc7e81432bad5f17bb37df166b3d0c7520
e274fd3d12f9a7ec53e5f3c7bd4f62e0e48206e09f7e0228803d27acc4dbb52a67f63506beaa849c
0a2d998f1d3719f3ae65711ab60a33f7f9a0b39dda3fd79c1d2f0ecf3194562d8c61a9a35a5e82b7
eca4a8418d18164ec61cd4143d19d02c16c2487af1df16111be52e0e611aa2b7b98b40358e2e064b
d0e63382fed87046156de5259b832e365105109d8477040a92b07c73c67d631da49d0803481273e5
c4e2464ca837df5d74727d550e8d7ec966a8f122665d2c00848014e58168eaf75c4a94da13a485c7
adff4e72d1a49028e3ea93255d05b2e1f48428fbc0b0c193b163165abed4263f29600553bdf5e774
a9f9bcf74abd9e04f14f1015b9c6269b660ad709734e050283700bebf6a78ebd65629b67fa206abe
63fd3fe0b46f9a6c7713c6d7a3b3652a98582dd01a0883bb3df7a43c91c9cf7a28b3bbae79c92e55
fe990524396a36fce0e5e3fa5a210924e34f7ebf555e78c960b61075a50d24eee16939b0b9419267
af57752bac0b585ec882d2080597ce81a880cc189a6bfdb3d13a1ffbe651293086f1ea232af0298b
d6538758ba90c691b975b6e46bd0d3e57c4c506b2f3d55a5d1c2e6d00b69963e4ec0a83c109512c8
3b3a63d7dc6ff569182cd10cd1face64dcbe2f39f5858aa8ce7152035d3fd3404765cbaba477a70c
763b29a3e25ec6078590cea6db507f6b346ddbc0274bb250bdd2f36052c96b9d842f34503d565727
1505dcc66612c646eb6a56b6a74f05c70021e5636f82d61f7b7c2c702c7a65ff7d466052b8ea06eb
71a754bc8c782f7dd53f52a5f008b5cce070ba782dfa5f0652fc4cb819eae3a5d6364df2b115d8ca
66958dc8447e979a9392a50f32e60ada84c0e44736a311941497dbfa3b569b35a37bb6b90c39b4a0
cd920eb1a7fa29665245044bfa9d224e421ee08b92f7c0d2e60627433891cdf38597b41af5cc6c0e
0b9535d45ee6c4b1268745ea22089e13d4a547f7e1f58e032817a6248579749900eff0187cc173ba
52e898051ec9691671272fb255ba3020f83f86b5417311cbc7d21c3db75c704b9b29b78a9fb493de
9297d4d61e54d1b2e90218b5a6a212e811fb81fcce1fc2a5263ae681285bf180f30e269edc5463ce
6df84b6fe10d0c9ecba9d68d19c55d44d8a722b78478d4da09611048e6e01e396b878e7abdc0c98b
3cd79a6e6b684df855dde6977ba913daabb024cd8233342920bbbc82019df4abcfbe16dd9751bb3f
52697e05845fc660bfeb4fa4cad32b5291c7a9d80232ae9d9b8905a1916a4b2efa2dc13d66584b1f
d259edb5fe5296b4b4b7f3af903e323548cc050b67a9d303a6819859775750665034074e49e0b015
8da6cb231de973fe2e4a6444837e96d43cc53331f276d6e392baf69c3bc42862da19db9f454eff96
12bf388fd9c63025c4a53e70a4131acb4914e0d2524a9219fe060d0874358438741782c0f96d292f
7f2f12ef7c616efd806236bfa42ced6a965b21c5844824f5a649f123ddea1970be8b29a46e87c175
0c9bb794baeff8e5dd42d5625230270c156b2e58a24d2128d50155b2b7c89c83fadaa7869b2444a7
8e08548ab7edd2187322fe59b7bc1c4304007ea4b326aa983655803601a5649bdf24a03e1bce9837
65f1cdbc0ba017c2224f33df8f1745e2067c1f81738f35fdf30d52872a27ae6c7677cc43f860c9a5
ebce72e956562e552e96368e00b8233824c49a59c520d1139af4908e0dfd60b402a65dac523efb84
32b0e57af174cfd3db05ec8c3a7dfe20414024d3bad41188701f2612d75acfe7e448d52199bc9ebe
b977f22e0f581cb586ab338aa323065b3bd8b97e5a86a914a1b3b46cfee06ebf0b21e7f60b5bbe3e
6de35aade2db2ba755c944e96aaf1080953c76e03f905194d4868e1f752832fcec0666dec6770bae
6338ba08fdb5d966a7616315d0f3b30b38d2b155dd3420594681e8e3ee6f64c6c8e622233932b396
0571753b6659db76d6b6de7c4ba2e198861096113ac0b702c21460b318cf78b9e407b7b09a32aba6
25403c8a4d381d37faef8c04eb6dedaaf4909e962f283f137090f08d5d7ea2c442cdfaadfb8cad78
54415ef56b06a2fb9a5a81dbe1965be6ffed27887bc8d87a8ec7ebc3afc4303f364a04e6f4e4a265
fa6d9d25133abee38a5744f571145a8df2c10c6a05b827db168b4d0571b27c25cc2ef24376454a11
8f7b99342d2c55642a724a77d58af9916a3bcbb8683e386de65abda5bf47395040aa606e1e7dc83a
8e67df14df9f9b3284318da59ce165ad7a7dd1841fa7027c32ac43c7c38bbe2741a7efb6c35fcf2e
4734a89e22fab2ef0224ab8b54db23d1ec071bdaa4b6177f57f5a367a3730a492e85affc6f95026d
1b702dd87fececdb008bd371db175e2da791f8adcd24665a565e5a916944ac20dfc12cf947ef1265
2668386538a46b2082206e7d6091c2fcb62269ba75469f184e68fd3688b286714db9b42701c28fd8
bd576dd7aa3cf4114baec5532279d85a9ef5e6c4ff82b96b48e6ff6f1e61c60ca349935241e250e5
c0e4fa4a482f5d2d78122d616484c182ab9cfe21f111beac7f22474e8a20698f397b6f7bf4cdad0d
649d10ef44fe5a3962f5219ee71a73aebc6a8b53ce9c0ce5d9be407cf51bc20252662ecad0e49c82
7146351f4d1383ab96a15dd29ee8897a6284be697b1299100a30565d9f7090105408415099ee30bd
4eaea32047fb1604a1d68d604517e0c64827f75676c45a8d62fcc68ffccfae2cf7cd4669d1464720
5aae69f3e67a517c1e95db9e3f9d5912a4b641a8340a2230fb4608e23d822807de6c17c5d22ee6d8
cf616492faf26a9ace33b8ae715a55bf480993cb7bbafd237ff8736974e899e6b1419468d259dc5f
e3bbfd9470a48400cb7933dc76335b25c7865461880a969bd105753afbb2b7f04f2d6855e3790739
cd66e5255498bda7b4fbe68525b80d67599efb65c2571aa64581fc603c7b04145845f2eedabb857d
dffc7017c6fd27beaa34755a528a37228bd9da2f2659ee5da1d36c3f01caa3ee0b5dd503de3bfd5c
0c40b33f5762c7bbb2577faa0a57b91d80472bdd159cbb1ec804f7071738c0834a0d93a05c02cfe9
34d333a5b6aef26c36cd30d4e459db57310d28994f0d9f761f2dc026cdccb8c01e834fc0d2a406b5
ba6981d6ce6938fbb761e3148a10cc11617f4594c1bac739980f4d316f0e9295da885d540b18e644
505dea95f09b58476f6061dd49518446492e273c56cf1958a4cf6f490fe67a6f6031fdcd02ab3226
a4a72a1b112e4b5a2592c547bfbb0224582acfabc66b18fb0cfc79f9ce2185e7e4e9ad4c27c2b925
08053f92ca8a1b72096a8cb790ca52f4a621b48e27a8211c5207d5fe59d36560e805e1dd41e69c5e
f174e09dc7acfbe03a9c5947e5a83f14d4f054216584afe46d88afe1839759cfb584175430025acf
4866fc112008114ea3d759c222ad65cee414f2898cc937087db1b387157f90e8b617c0288c16df4b
f12b4de304f3fe8213a3d62ddb752e0d184ce68bd65d2aa6ff291ae9a4406fd6f703616db9f17606
55b45633f31bd1e259a9b69559beb11c4cc192fe6328aab0da85694f1f682066c8c029c4efeaf62c
75f24e88efb611beb388588a0da2a84d94b5fe0a90164890477fdb01c176cc73f7b7fa0e4e7419be
bbb3d45f82e7d55f1377f8d51257fb3f3bc5f3cf68686f2a1101a38bb7d6b1de9d7a9f3556d2fac2
1f8031d4192e4aa86eb8637cb5bf30a2aba92bcf6f70570cc7e2f90d5d5dc05b763feed6f9bcd98f
050eadd045c3e34c05696a1f9146d8ad0bdc3132d9d43127e74908822f9b29ebac6031fd582f1e0b
20e3c3204319daba98967e9d17bd5543252f404e7ad0628b4165805b87e2100ad2b6
#END

#BEGIN DEVICE
	@IntProcSim, 11, 26
	@LocalIOMaster, 12, 27
	@RamFS, 1, 1
	@SDCardFS, 25, 1
	@UserLog, 7, 11
	@IntEthernet, 4, 2
	@DMLogger, 5, 10
	@IntModTCPClient, 9, 14, 1000, 2, 60
	@IntEIPClient, 22, 31, 1000, 2, 60
	@IntEthDMPPClient, 23, 32, 50, 250, 2
	@IntSerial, 10, 15
	@FMS_Computer, 32769, 14, 1000, 2, 60
	@UDP_FMS, 32770, 9, 5555
	@VM_Red, 32771, 14, 1000, 2, 60
	@VM_Blue, 32772, 14, 1000, 2, 60
	@Viewmarq1, 32773, 14, 250, 1, 60
#END

#BEGIN MEM_CONFIG
	X	BIT	decimal	2048	-1
	Y	BIT	decimal	2048	-1
	WX	SWORD	decimal	256	-1
	WY	SWORD	decimal	256	-1
	C	BIT	decimal	2048
	V	UWORD	decimal	4096
	N	SWORD	decimal	4096
	D	SDWORD	decimal	4096
	R	REAL	decimal	4096
	T	TIMER	decimal	256
	CT	COUNTER	decimal	256
	SS	STRING	decimal	128
	SL	STRING	decimal	64
	UDT	DATETIME	decimal	32
	PL	UWORD	decimal	256
	DLX	BIT	octal	01000	-1
	DLY	BIT	octal	01000	-1
	DLC	BIT	octal	01000
	DLV	UWORD	octal	04000
	MI	BIT	decimal	1024
	MC	BIT	decimal	1024
	MIR	SWORD	decimal	2048
	MHR	SWORD	decimal	2048
	RX	REAL	decimal	256	-1
	RY	REAL	decimal	256	-1
	VMBuffer	UBYTE	decimal	256
	ViewmarqString	STRING512	decimal	16
	VMByteBuff	UBYTE	decimal	256
	STRGETBBuff	UBYTE	decimal	256
	MSG	STRING		0
	ERR	STRING		0
	SysName	STRING		0
	SysDesc	STRING		0
	SerialNum	STRING		0
	PartNum	STRING		0
	Estop_Lights	PROGRAM		0	-1
	Red_DS_Lights	PROGRAM		0	-1
	Blue_DS_Lights	PROGRAM		0	-1
	Field_Stack_Lgt	PROGRAM		0	-1
	Year_Specific	PROGRAM		0	-1
	Red_Ref_Panels	PROGRAM		0	-1
	Blue_Ref_Panels	PROGRAM		0	-1
	VM_Red_Time	PROGRAM		0	-1
	VM_Blue_Time	PROGRAM		0	-1
	VM_Sender_Blue	PROGRAM		0	-1
	VM_Sender_Red	PROGRAM		0	-1
	VM_Time	PROGRAM		0	-1
	VM_SenderBlue	PROGRAM		0
	VM_SenderRed	PROGRAM		0
	VM_Teams	PROGRAM		0	-1
	VM_Team_Blue	PROGRAM		0	-1
	VM_Team_Red	PROGRAM		0	-1
	CaptureTime	PROGRAM		0	-1
#END

// Beginning of Code Block $Main
$PRGRM	$Main

// Rung $Main#1
// Offset 0
STR	ST1
RUN	Estop_Lights
RUN	Red_DS_Lights
RUN	Blue_DS_Lights
MAPIO	"2 X0 C0 X1 C1 X2 C2 X3 C3 X4 C4 X5 C5 X6 C6 MC8 Y0 MC9 Y1 MC10 Y2 MC11 Y3 MC12 Y4 MC13 Y5 MC14 Y6 C14 Y7 C15 Y8 C16 Y9 C17 Y10 C18 Y11 C19 Y12"
RUN	Field_Stack_Lgt
RUN	Year_Specific
RUN	Red_Ref_Panels
RUN	Blue_Ref_Panels
RUN	VM_Time
RUN	VM_Teams
RUN	CaptureTime

// End of Code Block $Main
$PGMEND	$Main

// Beginning of Code Block Estop_Lights
$PRGRM	Estop_Lights

// Rung Estop_Lights#1
// Offset 0
#BEGIN COMMENT 
"Handles the estop light commands from FMS and Estop Buttons"
"Red 1"
#END

STR	MC1
OR	C0
OUT	MC8

// Rung Estop_Lights#2
// Offset 3
#BEGIN COMMENT 
"Red 2"
#END

STR	MC2
OR	C1
OUT	MC9

// Rung Estop_Lights#3
// Offset 6
#BEGIN COMMENT 
"Red 3"
#END

STR	MC3
OR	C2
OUT	MC10

// Rung Estop_Lights#4
// Offset 9
#BEGIN COMMENT 
"Blue 1"
#END

STR	MC4
OR	C3
OUT	MC11

// Rung Estop_Lights#5
// Offset 12
#BEGIN COMMENT 
"Blue 2"
#END

STR	MC5
OR	C4
OUT	MC12

// Rung Estop_Lights#6
// Offset 15
#BEGIN COMMENT 
"Blue 3"
#END

STR	MC6
OR	C5
OUT	MC13

// Rung Estop_Lights#7
// Offset 18
#BEGIN COMMENT 
"Field Estop"
#END

STR	MC7
OR	C6
OUT	MC14

// End of Code Block Estop_Lights
$PGMEND	Estop_Lights

// Beginning of Code Block Red_DS_Lights
$PRGRM	Red_DS_Lights

// Rung Red_DS_Lights#1
// Offset 0
#BEGIN COMMENT 
"Handles the Red DS Lights from FMS"
"Red 1"
#END

STRN	MC15
FLASHER	1000	1000	C14

// Rung Red_DS_Lights#2
// Offset 5
#BEGIN COMMENT 
"Red 2"
#END

STRN	MC16
FLASHER	1000	1000	C15

// Rung Red_DS_Lights#3
// Offset 10
#BEGIN COMMENT 
"Red 3"
#END

STRN	MC17
FLASHER	1000	1000	C16

// Rung Red_DS_Lights#4
// Offset 15
STR	MC15
AND	MC30
SET	C14

// Rung Red_DS_Lights#5
// Offset 18
STR	MC16
AND	MC30
SET	C15

// Rung Red_DS_Lights#6
// Offset 21
STR	MC17
AND	MC30
SET	C16

// End of Code Block Red_DS_Lights
$PGMEND	Red_DS_Lights

// Beginning of Code Block Blue_DS_Lights
$PRGRM	Blue_DS_Lights

// Rung Blue_DS_Lights#1
// Offset 0
STRN	MC18
FLASHER	1000	1000	C17

// Rung Blue_DS_Lights#2
// Offset 5
STRN	MC19
FLASHER	1000	1000	C18

// Rung Blue_DS_Lights#3
// Offset 10
STRN	MC20
FLASHER	1000	1000	C19

// Rung Blue_DS_Lights#4
// Offset 15
STR	MC18
AND	MC30
SET	C17

// Rung Blue_DS_Lights#5
// Offset 18
STR	MC19
AND	MC30
SET	C18

// Rung Blue_DS_Lights#6
// Offset 21
STR	MC20
AND	MC30
SET	C19

// Rung Blue_DS_Lights#7
// Offset 24
STR	MC0
SET	MC900

// End of Code Block Blue_DS_Lights
$PGMEND	Blue_DS_Lights

// Beginning of Code Block Field_Stack_Lgt
$PRGRM	Field_Stack_Lgt

// Rung Field_Stack_Lgt#1
// Offset 0
STR	MC23
SET	C21

// Rung Field_Stack_Lgt#2
// Offset 2
STR	MC22
SET	C20

// Rung Field_Stack_Lgt#3
// Offset 4
STR	MC21
SET	C22

// Rung Field_Stack_Lgt#4
// Offset 6
STR	MC32
FLASHER	1000	1000	C22
SET	C21

// Rung Field_Stack_Lgt#5
// Offset 12
STR	MC30
SET	C22

// End of Code Block Field_Stack_Lgt
$PGMEND	Field_Stack_Lgt

// Beginning of Code Block Year_Specific
$PRGRM	Year_Specific

// Rung Year_Specific#1
// Offset 0
NOP

// End of Code Block Year_Specific
$PGMEND	Year_Specific

// Beginning of Code Block Red_Ref_Panels
$PRGRM	Red_Ref_Panels

// Rung Red_Ref_Panels#1
// Offset 0
#BEGIN COMMENT 
"Red Foul Count"
#END

STR	C91
INC	V1

// Rung Red_Ref_Panels#2
// Offset 2
#BEGIN COMMENT 
"Red Tech Foul Count"
#END

STR	C90
INC	V2

// Rung Red_Ref_Panels#3
// Offset 4
#BEGIN COMMENT 
"Red Near Left Top Hatch and Cargo"
#END

STR	C92
INC	V200

// Rung Red_Ref_Panels#4
// Offset 6
STR	C93
INC	V201

// Rung Red_Ref_Panels#5
// Offset 8
#BEGIN COMMENT 
"Red Near Right Top Hatch and Cargo"
#END

STR	C94
INC	V200

// Rung Red_Ref_Panels#6
// Offset 10
STR	C95
INC	V201

// Rung Red_Ref_Panels#7
// Offset 12
#BEGIN COMMENT 
"Red Near Left Middle Hatch and Cargo"
#END

STR	C96
INC	V200

// Rung Red_Ref_Panels#8
// Offset 14
STR	C97
INC	V201

// Rung Red_Ref_Panels#9
// Offset 16
#BEGIN COMMENT 
"Red Near Right Middle Hatch and Cargo"
#END

STR	C98
INC	V200

// Rung Red_Ref_Panels#10
// Offset 18
STR	C99
INC	V201

// Rung Red_Ref_Panels#11
// Offset 20
#BEGIN COMMENT 
"Red Near Left Bottom Hatch and Cargo"
#END

STR	C100
INC	V200

// Rung Red_Ref_Panels#12
// Offset 22
STR	C101
INC	V201

// Rung Red_Ref_Panels#13
// Offset 24
#BEGIN COMMENT 
"Red Near Right Bottom Hatch and Cargo"
#END

STR	C102
INC	V200

// Rung Red_Ref_Panels#14
// Offset 26
STR	C103
INC	V201

// Rung Red_Ref_Panels#15
// Offset 28
STR	ST6
MWX	@FMS_Computer	2130706433	502	255	6	MHR31	1	V200	0x0	0	0x0	C200	C200	DST511
MWX	@FMS_Computer	2130706433	502	255	6	MHR30	1	V201	0x0	0	0x0	C200	C200	DST511

// End of Code Block Red_Ref_Panels
$PGMEND	Red_Ref_Panels

// Beginning of Code Block Blue_Ref_Panels
$PRGRM	Blue_Ref_Panels

// Rung Blue_Ref_Panels#1
// Offset 0
NOP

// End of Code Block Blue_Ref_Panels
$PGMEND	Blue_Ref_Panels

// Beginning of Code Block VM_Red_Time
$PRGRM	VM_Red_Time

// Rung VM_Red_Time#1
// Offset 0
#BEGIN COMMENT 
""
"********************************************************************************"
"                                  VM_TimeRed"
""
"                     Send Time to Viewmarq"
"               Check to see if display needs to be formatted"
""
"********************************************************************************"
"2014-09-30  Rev-   Initial Release   RVF"
""
"********************************************************************************"
"Key variables to monitor during debug:"
""
"VM_RedTimeStr   - Team Number string to send to the Viewmarq"
"VM_RedFormatStr  - String that formats the display for Teams"
"VM_RedFmtWords - Number of word for MRX command"
"Err_TimeRed - Error counter for Blue team Viewmarq command"
"VM_Mode - Viewmarq Mode (Custom (1) or Team/Time (0))"
""
""
#END

SG	VM_Red_Time.S0

// Rung VM_Red_Time#2
// Offset 2
#BEGIN COMMENT 
"See if Display is already formatted, if not, format it for team/time display"
#END

STRE	MHR72	0
JMP	VM_Red_Time.S20

// Rung VM_Red_Time#3
// Offset 7
STR	ST1
STRPRINT	ViewmarqString12	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 1 4><T>  </T><STR 2 4><T>   </T><AMB><STR 3 4><GRN><T>   </T><STR 4 4>"" ""$0D"""
STRPRINT	ViewmarqString15	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 1 4><T>  </T><STR 2 4><T>   </T><AMB><STR 3 4><GRN><T>   </T><STR 4 4>"" ""$0D"""
RUN	VM_SenderRed
JMP	VM_Red_Time.S2

// Rung VM_Red_Time#4
// Offset 91
SG	VM_Red_Time.S2

// Rung VM_Red_Time#5
// Offset 93
STR	VM_SenderRed.Done
JMP	VM_Red_Time.S20

// Rung VM_Red_Time#6
// Offset 95
#BEGIN COMMENT 
"Have new Time, so Create BLUE Time String, "
#END

SG	VM_Red_Time.S20

// Rung VM_Red_Time#7
// Offset 97
#BEGIN COMMENT 
"Send  Team numbers to Viewmarq"
#END

STRPRINT	ViewmarqString13	0x4	"""<ID 0><SETS 3>"" V0 ""</SETS>"" ""$0D"""
STRPRINT	ViewmarqString15	0x0	"""<ID 0><SETS 3>"" V0 ""</SETS>"" ""$0D"""
RUN	VM_SenderRed
JMP	VM_Red_Time.S22

// Rung VM_Red_Time#8
// Offset 132
SG	VM_Red_Time.S22

// Rung VM_Red_Time#9
// Offset 134
STR	VM_SenderBlue.Done
EXIT

// Rung VM_Red_Time#10
// Offset 136
NOP

// Rung VM_Red_Time#11
// Offset 137
NOP

// Rung VM_Red_Time#12
// Offset 138
NOP

// Rung VM_Red_Time#13
// Offset 139
NOP

// End of Code Block VM_Red_Time
$PGMEND	VM_Red_Time

// Beginning of Code Block VM_Blue_Time
$PRGRM	VM_Blue_Time

// Rung VM_Blue_Time#1
// Offset 0
#BEGIN COMMENT 
""
"********************************************************************************"
"                                  VM_TimeBlue"
""
"                     Send Time to Viewmarq"
"               Check to see if display needs to be formatted"
""
"********************************************************************************"
"2014-09-30  Rev-   Initial Release   RVF"
""
"********************************************************************************"
"Key variables to monitor during debug:"
""
"VM_BlueTimeStr   - Team Number string to send to the Viewmarq"
"VM_BlueFormatStr  - String that formats the display for Teams"
"VM_BlueFmtWords - Number of word for MRX command"
"Err_TimeBlue - Error counter for Blue team Viewmarq command"
"VM_Mode - Viewmarq Mode (Custom (1) or Team/Time (0))"
""
""
#END

SG	VM_Blue_Time.S0

// Rung VM_Blue_Time#2
// Offset 2
#BEGIN COMMENT 
"See if Display is already formatted, if not, format it for team/time display"
#END

STRE	MHR72	0
JMP	VM_Blue_Time.S20

// Rung VM_Blue_Time#3
// Offset 7
STR	ST1
STRPRINT	ViewmarqString11	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 4 4><T>  </T><AMB><STR 3 4><T>   </T><GRN><STR 2 4><T>   </T><STR 1 4>"" ""$0D"""
STRPRINT	ViewmarqString15	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 4 4><T>  </T><AMB><STR 3 4><T>   </T><GRN><STR 2 4><T>   </T><STR 1 4>"" ""$0D"""
RUN	VM_SenderBlue
JMP	VM_Blue_Time.S2

// Rung VM_Blue_Time#4
// Offset 91
SG	VM_Blue_Time.S2

// Rung VM_Blue_Time#5
// Offset 93
STR	VM_SenderBlue.Done
JMP	VM_Blue_Time.S20

// Rung VM_Blue_Time#6
// Offset 95
#BEGIN COMMENT 
"Have new Time, so Create BLUE Time String, "
#END

SG	VM_Blue_Time.S20

// Rung VM_Blue_Time#7
// Offset 97
#BEGIN COMMENT 
"Send time to Viewmarq"
#END

STRPRINT	ViewmarqString14	0x4	"""<ID 0><SETS 3>"" V0 ""</SETS>"" ""$0D"""
STRPRINT	ViewmarqString15	0x4	"""<ID 0><SETS 3>"" V0 ""</SETS>"" ""$0D"""
RUN	VM_SenderBlue
JMP	VM_Blue_Time.S22

// Rung VM_Blue_Time#8
// Offset 132
SG	VM_Blue_Time.S22

// Rung VM_Blue_Time#9
// Offset 134
STR	VM_SenderBlue.Done
EXIT

// Rung VM_Blue_Time#10
// Offset 136
NOP

// End of Code Block VM_Blue_Time
$PGMEND	VM_Blue_Time

// Beginning of Code Block VM_Sender_Blue
$PRGRM	VM_Sender_Blue

// Rung VM_Sender_Blue#1
// Offset 0
#BEGIN COMMENT 
""
"********************************************************************************"
"                                  VM_SenderBlue"
""
"                     Send modbus data to Blue viewmarq"
""
"********************************************************************************"
"2014-10-01  Rev-   Initial Release   RVF"
""
"********************************************************************************"
"Assumes String will be provided in ""VM_SenderStr"""
""
"Key variables to monitor during debug:"
""
"VM_SenderStr - the string the message should be in before calling this routine"
"VM_SenderWords - word count for MWX instrcution"
"VM_MRXRetryCnt - Tells you how many times the MRX had to be re-tried"
#END

SG	VM_Sender_Blue.S0

// Rung VM_Sender_Blue#2
// Offset 2
#BEGIN COMMENT 
"Convert String to bytes for modbus write"
#END

STR	ST1
STRGETB	ViewmarqString15	0	ViewmarqString15.Length	VMByteBuff0

// Rung VM_Sender_Blue#3
// Offset 7
#BEGIN COMMENT 
"Calc number of words needed for the following MWX instruction"
#END

STR	ST1
MATH	V1011	"(ViewmarqString15.Length / 2) + 1"
MATH	D37	"0"
JMP	VM_Sender_Blue.S10

// Rung VM_Sender_Blue#4
// Offset 25
#BEGIN COMMENT 
"Modbus Write msg to VM, wait here till done"
#END

SG	VM_Sender_Blue.S10

// Rung VM_Sender_Blue#5
// Offset 27
MWX	@VM_Blue	167797960	502	255	16	11000	V1011	VMByteBuff0	0x0	0	0x101	VM_Sender_Blue.S20	VM_Sender_Blue.S99	DST511

// Rung VM_Sender_Blue#6
// Offset 40
SG	VM_Sender_Blue.S20

// Rung VM_Sender_Blue#7
// Offset 42
MRX	@VM_Blue	167797960	502	255	3	11000	1	V406	0x0	0	0x101	VM_Sender_Blue.S30	VM_Sender_Blue.S99	DST511

// Rung VM_Sender_Blue#8
// Offset 55
SG	VM_Sender_Blue.S30

// Rung VM_Sender_Blue#9
// Offset 57
#BEGIN COMMENT 
"We want to see a 0 in the status.  Anything else says viewmarq is not done yet (It clears it's buffer when it is done. Until then you will see the first two characters of what you sent)"
#END

STRE	V406	0
JMP	VM_Sender_Blue.S40

// Rung VM_Sender_Blue#10
// Offset 62
#BEGIN COMMENT 
"If we don't see a 0, then inc retry count and try again in a little while ..."
#END

STRNE	V406	0
INC	D37

// Rung VM_Sender_Blue#11
// Offset 67
STRGT	D37	4
JMP	VM_Sender_Blue.S99

// Rung VM_Sender_Blue#12
// Offset 72
STR	ST1
TMR	T34	50

// Rung VM_Sender_Blue#13
// Offset 75
STR	T34.Done
JMP	VM_Sender_Blue.S20

// Rung VM_Sender_Blue#14
// Offset 77
SG	VM_Sender_Blue.S40

// Rung VM_Sender_Blue#15
// Offset 79
#BEGIN COMMENT 
"Now that the Viewmarq's buffer is clear, read the status register to make sure it is happy."
#END

MRX	@VM_Blue	167797960	502	255	3	11500	1	V406	0x0	0	0x101	VM_Sender_Blue.S50	VM_Sender_Blue.S99	DST511

// Rung VM_Sender_Blue#16
// Offset 92
SG	VM_Sender_Blue.S50

// Rung VM_Sender_Blue#17
// Offset 94
#BEGIN COMMENT 
"Convert bytes into string so we can compare with ""OK"""
#END

STRPUTB	SL1	0	2	V406
STRCMP	SL1	0x2	C89	ST1023	ST1023	"""OK"""

// Rung VM_Sender_Blue#18
// Offset 106
STR	C89
EXIT

// Rung VM_Sender_Blue#19
// Offset 108
STRN	C89
JMP	VM_Sender_Blue.S99

// Rung VM_Sender_Blue#20
// Offset 110
SG	VM_Sender_Blue.S99

// Rung VM_Sender_Blue#21
// Offset 112
INC	D34
EXIT

// Rung VM_Sender_Blue#22
// Offset 114
NOP

// Rung VM_Sender_Blue#23
// Offset 115
NOP

// End of Code Block VM_Sender_Blue
$PGMEND	VM_Sender_Blue

// Beginning of Code Block VM_Sender_Red
$PRGRM	VM_Sender_Red

// Rung VM_Sender_Red#1
// Offset 0
#BEGIN COMMENT 
""
"********************************************************************************"
"                                  VM_SenderRed"
""
"                     Send modbus data to Red viewmarq"
""
"********************************************************************************"
"2014-10-01  Rev-   Initial Release   RVF"
""
"********************************************************************************"
"Assumes String will be provided in ""VM_SenderStr"""
""
"Key variables to monitor during debug:"
""
"VM_SenderStr - the string the message should be in before calling this routine"
"VM_SenderWords - word count for MWX instrcution"
"VM_MRXRetryCnt - Tells you how many times the MRX had to be re-tried"
#END

SG	VM_Sender_Red.S0

// Rung VM_Sender_Red#2
// Offset 2
#BEGIN COMMENT 
"Convert String to bytes for modbus write"
#END

STR	ST1
STRGETB	ViewmarqString15	0	ViewmarqString15.Length	VMByteBuff0

// Rung VM_Sender_Red#3
// Offset 7
#BEGIN COMMENT 
"Calc number of words needed for the following MWX instruction"
#END

STR	ST1
MATH	V1011	"(ViewmarqString15.Length / 2) + 1"
MATH	D37	"0"
JMP	VM_Sender_Red.S10

// Rung VM_Sender_Red#4
// Offset 25
#BEGIN COMMENT 
"Modbus Write msg to VM, wait here till done"
#END

SG	VM_Sender_Red.S10

// Rung VM_Sender_Red#5
// Offset 27
MWX	@VM_Red	167797961	502	255	16	11000	V1011	VMByteBuff0	0x0	0	0x101	VM_Sender_Red.S20	VM_Sender_Red.S99	DST511

// Rung VM_Sender_Red#6
// Offset 40
SG	VM_Sender_Red.S20

// Rung VM_Sender_Red#7
// Offset 42
MRX	@VM_Red	167797961	502	255	3	11000	1	V406	0x0	0	0x101	VM_Sender_Red.S30	VM_Sender_Red.S99	DST511

// Rung VM_Sender_Red#8
// Offset 55
SG	VM_Sender_Red.S30

// Rung VM_Sender_Red#9
// Offset 57
#BEGIN COMMENT 
"We want to see a 0 in the status.  Anything else says viewmarq is not done yet (It clears it's buffer when it is done. Until then you will see the first two characters of what you sent)"
#END

STRE	V406	0
JMP	VM_Sender_Red.S40

// Rung VM_Sender_Red#10
// Offset 62
#BEGIN COMMENT 
"If we don't see a 0, then inc retry count and try again in a little while ..."
#END

STRNE	V406	0
INC	D37

// Rung VM_Sender_Red#11
// Offset 67
STRGT	D37	4
JMP	VM_Sender_Red.S99

// Rung VM_Sender_Red#12
// Offset 72
STR	ST1
TMR	T34	50

// Rung VM_Sender_Red#13
// Offset 75
STR	T34.Done
JMP	VM_Sender_Red.S20

// Rung VM_Sender_Red#14
// Offset 77
SG	VM_Sender_Red.S40

// Rung VM_Sender_Red#15
// Offset 79
#BEGIN COMMENT 
"Now that the Viewmarq's buffer is clear, read the status register to make sure it is happy."
#END

MRX	@VM_Red	167797961	502	255	3	11500	1	V406	0x0	0	0x101	VM_Sender_Red.S50	VM_Sender_Red.S99	DST511

// Rung VM_Sender_Red#16
// Offset 92
SG	VM_Sender_Red.S50

// Rung VM_Sender_Red#17
// Offset 94
#BEGIN COMMENT 
"Convert bytes into string so we can compare with ""OK"""
#END

STRPUTB	SL1	0	2	V406
STRCMP	SL1	0x2	C89	ST1023	ST1023	"""OK"""

// Rung VM_Sender_Red#18
// Offset 106
STR	C89
EXIT

// Rung VM_Sender_Red#19
// Offset 108
STRN	C89
JMP	VM_Sender_Red.S99

// Rung VM_Sender_Red#20
// Offset 110
SG	VM_Sender_Red.S99

// Rung VM_Sender_Red#21
// Offset 112
INC	D33
EXIT

// Rung VM_Sender_Red#22
// Offset 114
NOP

// Rung VM_Sender_Red#23
// Offset 115
NOP

// End of Code Block VM_Sender_Red
$PGMEND	VM_Sender_Red

// Beginning of Code Block VM_Time
$PRGRM	VM_Time

// Rung VM_Time#1
// Offset 0
SG	VM_Time.S0

// Rung VM_Time#2
// Offset 2
RUN	VM_Blue_Time

// Rung VM_Time#3
// Offset 4
STR	VM_Blue_Time.Done
JMP	VM_Time.S20

// Rung VM_Time#4
// Offset 6
SG	VM_Time.S20

// Rung VM_Time#5
// Offset 8
RUN	VM_Red_Time

// Rung VM_Time#6
// Offset 10
STR	VM_Red_Time.Done
EXIT

// Rung VM_Time#7
// Offset 12
NOP

// Rung VM_Time#8
// Offset 13
NOP

// End of Code Block VM_Time
$PGMEND	VM_Time

// Beginning of Code Block VM_Teams
$PRGRM	VM_Teams

// Rung VM_Teams#1
// Offset 0
SG	VM_Teams.S22

// Rung VM_Teams#2
// Offset 2
RUN	VM_Team_Blue

// Rung VM_Teams#3
// Offset 4
STR	VM_Team_Blue.Done
JMP	VM_Teams.S24

// Rung VM_Teams#4
// Offset 6
SG	VM_Teams.S24

// Rung VM_Teams#5
// Offset 8
RUN	VM_Team_Red

// Rung VM_Teams#6
// Offset 10
STR	VM_Team_Red.Done
EXIT

// End of Code Block VM_Teams
$PGMEND	VM_Teams

// Beginning of Code Block VM_Team_Blue
$PRGRM	VM_Team_Blue

// Rung VM_Team_Blue#1
// Offset 0
#BEGIN COMMENT 
""
"********************************************************************************"
"                                  VMBlue_TeamNums"
""
"                     Send Team Numbers to Viewmarq"
"               Check to see if display needs to be formatted"
""
"********************************************************************************"
"2014-09-29  Rev-   Initial Release   RVF"
""
"********************************************************************************"
"Key variables to monitor during debug:"
""
"VM_ BlueTeamStr   - Team Number string to send to the Viewmarq"
"VM_BlueFormatStr  - String that formats the display for Teams"
"VM_BlueFmtWords - Number of word for MRX command"
"Err_TeamNumBlue - Error counter for Blue team Viewmarq command"
"VM_Mode - Viewmarq Mode (Custom (1) or Team/Time (0))"
""
""
#END

SG	VM_Team_Blue.S0

// Rung VM_Team_Blue#2
// Offset 2
#BEGIN COMMENT 
"See if Display is already formatted, if not, format it for team/time display"
#END

STRE	MHR72	0
JMP	VM_Team_Blue.S20

// Rung VM_Team_Blue#3
// Offset 7
STR	ST1
STRPRINT	ViewmarqString11	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 4 4><T>  </T><AMB><STR 3 4><T>   </T><GRN><STR 2 4><T>   </T><STR 1 4>"" ""$0D"""
STRPRINT	ViewmarqString15	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 4 4><T>  </T><AMB><STR 3 4><T>   </T><GRN><STR 2 4><T>   </T><STR 1 4>"" ""$0D"""
RUN	VM_SenderBlue
JMP	VM_Team_Blue.S2

// Rung VM_Team_Blue#4
// Offset 91
SG	VM_Team_Blue.S2

// Rung VM_Team_Blue#5
// Offset 93
STR	VM_SenderBlue.Done
JMP	VM_Team_Blue.S20

// Rung VM_Team_Blue#6
// Offset 95
SG	VM_Team_Blue.S20

// Rung VM_Team_Blue#7
// Offset 97
#BEGIN COMMENT 
"Send  Team numbers to Viewmarq"
#END

STRPRINT	ViewmarqString7	0x4	"""<ID 0><SETS 1>"" SS6 ""</SETS><SETS 2>"" SS7 ""</SETS><SETS 4>"" SS8 ""</SETS>"" ""$0D"""
STRPRINT	ViewmarqString15	0x4	"""<ID 0><SETS 1>"" SS6 ""</SETS><SETS 2>"" SS7 ""</SETS><SETS 4>"" SS8 ""</SETS>"" ""$0D"""
RUN	VM_SenderBlue
JMP	VM_Team_Blue.S22

// Rung VM_Team_Blue#8
// Offset 154
SG	VM_Team_Blue.S22

// Rung VM_Team_Blue#9
// Offset 156
#BEGIN COMMENT 
"Send BLUE Team string to Viewmarq"
#END

STR	VM_SenderBlue.Done
EXIT

// Rung VM_Team_Blue#10
// Offset 158
NOP

// Rung VM_Team_Blue#11
// Offset 159
NOP

// End of Code Block VM_Team_Blue
$PGMEND	VM_Team_Blue

// Beginning of Code Block VM_Team_Red
$PRGRM	VM_Team_Red

// Rung VM_Team_Red#1
// Offset 0
#BEGIN COMMENT 
""
"********************************************************************************"
"                                  VM_TeamNumsRed"
""
"                     Send Team Numbers to Viewmarq"
"               Check to see if display needs to be formatted"
""
"********************************************************************************"
"2014-09-30  Rev-   Initial Release   RVF"
""
"********************************************************************************"
"Key variables to monitor during debug:"
""
"VM_ RedTeamStr   - Team Number string to send to the Viewmarq"
"VM_RedFormatStr  - String that formats the display for Teams"
"VM_RedFmtWords - Number of word for MRX command"
"Err_TeamNumRed - Error counter for Blue team Viewmarq command"
"VM_Mode - Viewmarq Mode (Custom (1) or Team/Time (0))"
""
""
#END

SG	VM_Team_Red.S0

// Rung VM_Team_Red#2
// Offset 2
#BEGIN COMMENT 
"See if Display is already formatted, if not, format it for team/time display"
#END

STRE	MHR72	0
JMP	VM_Team_Red.S20

// Rung VM_Team_Red#3
// Offset 7
STR	ST1
STRPRINT	ViewmarqString12	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 1 4><T>  </T><STR 2 4><T>   </T><AMB><STR 3 4><GRN><T>   </T><STR 4 4>"" ""$0D"""
STRPRINT	ViewmarqString15	0x4	"""<ID 0><CLR><WIN 0 0 287 31><POS 0 0><LJ><BL N><CS 3><GRN><STR 1 4><T>  </T><STR 2 4><T>   </T><AMB><STR 3 4><GRN><T>   </T><STR 4 4>"" ""$0D"""
RUN	VM_SenderRed
JMP	VM_Team_Red.S2

// Rung VM_Team_Red#4
// Offset 91
SG	VM_Team_Red.S2

// Rung VM_Team_Red#5
// Offset 93
STR	VM_SenderRed.Done
JMP	VM_Team_Red.S20

// Rung VM_Team_Red#6
// Offset 95
#BEGIN COMMENT 
"Have new team #, so Create BLUE Team Number String, "
#END

SG	VM_Team_Red.S20

// Rung VM_Team_Red#7
// Offset 97
#BEGIN COMMENT 
"Send  Team numbers to Viewmarq"
#END

STRPRINT	ViewmarqString8	0x4	"""<ID 0><SETS 1>"" SS3 ""</SETS><SETS 2>"" SS4 ""</SETS><SETS 4>"" SS5 ""</SETS>"" ""$0D"""
STRPRINT	ViewmarqString15	0x4	"""<ID 0><SETS 1>"" SS3 ""</SETS><SETS 2>"" SS4 ""</SETS><SETS 4>"" SS5 ""</SETS>"" ""$0D"""
RUN	VM_SenderRed
JMP	VM_Team_Red.S22

// Rung VM_Team_Red#8
// Offset 154
#BEGIN COMMENT 
"Send BLUE Team string to Viewmarq"
#END

SG	VM_Team_Red.S22

// Rung VM_Team_Red#9
// Offset 156
#BEGIN COMMENT 
"Send BLUE Team numbers to Viewmarq"
#END

STR	VM_SenderRed.Done
EXIT

// Rung VM_Team_Red#10
// Offset 158
NOP

// Rung VM_Team_Red#11
// Offset 159
NOP

// End of Code Block VM_Team_Red
$PGMEND	VM_Team_Red

// Beginning of Code Block CaptureTime
$PRGRM	CaptureTime

// Rung CaptureTime#1
// Offset 0
STR	ST1
MRX	@FMS_Computer	-1062731511	502	255	3	1	1	V0	0x1	50	0x0	C200	C200	DST511

// Rung CaptureTime#2
// Offset 14
STR	ST1
MRX	@FMS_Computer	-1062731511	502	255	3	1	1	MHR3	0x1	500	0x0	C200	C200	DST511

// End of Code Block CaptureTime
$PGMEND	CaptureTime

#BEGIN ELEMENT_DOC
"C0","R1_Button","",""
"C1","R2_Button","",""
"C2","R3_Button","",""
"C3","B1_Button","",""
"C4","B2_Button","",""
"C5","B3_Button","",""
"C6","Field_Button","",""
"C7","R1_Amb_Bit","",""
"C8","R2_Amb_Bit","",""
"C9","R3_Amb_Bit","",""
"C10","B1_Amb_Bit","",""
"C11","B2_Amb_Bit","",""
"C12","B3_Amb_Bit","",""
"C13","Field_Amb_Bit","",""
"C14","R1_DS_Bit","",""
"C15","R2_DS_Bit","",""
"C16","R3_DS_Bit","",""
"C17","B1_DS_Bit","",""
"C18","B2_DS_Bit","",""
"C19","B3_DS_Bit","",""
"C20","Field_R_Bit","",""
"C21","Field_B_Bit","",""
"C22","Field_G_Bit","",""
"C23","Field_Estop_Bit","",""
"C89","Temp_Bit","General test bit",""
"C90","Red_Tech","",""
"C91","Red_Foul","",""
"C92","Red_NLT_Hatch","",""
"C93","Red_NLT_Cargo","",""
"C94","Red_NRT_Hatch","",""
"C95","Red_NRT_Cargo","",""
"C96","Red_NLM_Hatch","",""
"C97","Red_NLM_Cargo","",""
"C98","Red_NRM_Hatch","",""
"C99","Red_NRM_Cargo","",""
"C100","Red_NLB_Hatch","",""
"C101","Red_NLB_Cargo","",""
"C102","Red_NRB_Hatch","",""
"C103","Red_NRB_Cargo","",""
"V1","Red_Foul_Count","",""
"V2","Red_TF_Count","",""
"V3","Blue_Foul_Count","",""
"V4","Blue_TF_Count","",""
"V16","_Red_Time","","Red_Time"
"V17","_Blue_Time","","Blue_Time"
"V20","Time","",""
"V100","TempIndexRed0","",""
"V110","_VM_Mode","","VM_Mode"
"V200","Red_Hatch_Count","",""
"V201","Red_Cargo_Count","",""
"V202","Red_Near_Comp","",""
"V203","Red_Far_Comp","",""
"V406","VM_SndrMRXStatus","",""
"V1011","VM_SenderWords","",""
"D33","Err_TeamNumRed","",""
"D34","Err_TeamNumBlu","",""
"D37","VM_MRXRetryCnt","",""
"D102","Viewmarq_RED","",""
"D103","Viewmarq_BLUE","",""
"T34","VM_SenderMRX","",""
"SS0","Red_Time","",""
"SS1","Blue_Time","",""
"SS3","Red_1","",""
"SS4","Red_2","",""
"SS5","Red_3","",""
"SS6","Blue_1","",""
"SS7","Blue_2","",""
"SS8","Blue_3","",""
"SS9","RED3_Team","",""
"SS16","BLUE1_Team","",""
"SS17","BLUE2_Team","",""
"SS18","BLUE3_Team","",""
"SS23","BlueVM_Time","",""
"SS73","Match_TimePrev","",""
"SL1","MatchTime","",""
"MC1","MB_R1_Estop","",""
"MC2","MB_R2_Estop","",""
"MC3","MB_R3_Estop","",""
"MC4","MB_B1_Estop","",""
"MC5","MB_B2_Estop","",""
"MC6","MB_B3_Estop","",""
"MC7","MB_Field_Estop","",""
"MC8","R1_Estop_Status","",""
"MC9","R2_Estop_Status","",""
"MC10","R3_Estop_Status","",""
"MC11","B1_Estop_Status","",""
"MC12","B2_Estop_Status","",""
"MC13","B3_Estop_Status","",""
"MC14","Field_Estop_Stat","",""
"MC15","R1_Ready","",""
"MC16","R2_Ready","",""
"MC17","R3_Ready","",""
"MC18","B1_Ready","",""
"MC19","B2_Ready","",""
"MC20","B3_Ready","",""
"MC21","Field_Green","",""
"MC22","Field_Red","",""
"MC23","Field_Blue","",""
"MC30","Start_Match","",""
"MC31","Stop_Match","",""
"MC32","Pre_Start_Match","",""
"MHR1","Field_Timer","",""
"MHR2","Custom_MSG","",""
"MHR3","Red1","",""
"MHR4","Red2","",""
"MHR5","Red3","",""
"MHR6","Blue1","",""
"MHR7","Blue2","",""
"MHR8","Blue3","",""
"MHR30","Red_Cargo","",""
"MHR31","Red_Hatch","",""
"MHR72","VM_Mode","",""
"MHR73","MB_Match_Time","",""
"ViewmarqString2","UDP_Viewmarq_Msg","",""
"ViewmarqString7","VM_BlueTeamStr","",""
"ViewmarqString8","VM_RedTeamStr","",""
"ViewmarqString11","VM_BlueFormatStr","",""
"ViewmarqString12","VM_RedFormatStr","",""
"ViewmarqString13","VM_RedTimeStr","",""
"ViewmarqString14","VM_BlueTimeStr","",""
"ViewmarqString15","VM_SenderStr","",""
"VM_Time.S0","Capture_Time","",""
"SK1","VM_Mode_TeamTime","0",""
"US0","_Estop_Buttons","","Estop_Buttons"
"US1","_View_Marq_Stuff","","View_Marq_Stuff"
"US2","_Test_UDP","","Test_UDP"
#END

